// Code generated by ogen, DO NOT EDIT.

package server

import (
	"time"
)

// Ref: #/components/schemas/CreateUserRequest
type CreateUserRequest struct {
	User CreateUserRequestUser `json:"user"`
}

// GetUser returns the value of User.
func (s *CreateUserRequest) GetUser() CreateUserRequestUser {
	return s.User
}

// SetUser sets the value of User.
func (s *CreateUserRequest) SetUser(val CreateUserRequestUser) {
	s.User = val
}

// Ref: #/components/schemas/CreateUserRequest_user
type CreateUserRequestUser struct {
	Username string `json:"username"`
}

// GetUsername returns the value of Username.
func (s *CreateUserRequestUser) GetUsername() string {
	return s.Username
}

// SetUsername sets the value of Username.
func (s *CreateUserRequestUser) SetUsername(val string) {
	s.Username = val
}

// Ref: #/components/schemas/Error
type Error struct {
	Type          string                    `json:"type"`
	Message       string                    `json:"message"`
	InvalidParams []ErrorInvalidParamsInner `json:"invalid_params"`
}

// GetType returns the value of Type.
func (s *Error) GetType() string {
	return s.Type
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// GetInvalidParams returns the value of InvalidParams.
func (s *Error) GetInvalidParams() []ErrorInvalidParamsInner {
	return s.InvalidParams
}

// SetType sets the value of Type.
func (s *Error) SetType(val string) {
	s.Type = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// SetInvalidParams sets the value of InvalidParams.
func (s *Error) SetInvalidParams(val []ErrorInvalidParamsInner) {
	s.InvalidParams = val
}

func (*Error) createUserRes()        {}
func (*Error) getUserByUsernameRes() {}

// Ref: #/components/schemas/Error_invalid_params_inner
type ErrorInvalidParamsInner struct {
	Name   string `json:"name"`
	Reason string `json:"reason"`
}

// GetName returns the value of Name.
func (s *ErrorInvalidParamsInner) GetName() string {
	return s.Name
}

// GetReason returns the value of Reason.
func (s *ErrorInvalidParamsInner) GetReason() string {
	return s.Reason
}

// SetName sets the value of Name.
func (s *ErrorInvalidParamsInner) SetName(val string) {
	s.Name = val
}

// SetReason sets the value of Reason.
func (s *ErrorInvalidParamsInner) SetReason(val string) {
	s.Reason = val
}

// Ref: #/components/schemas/User
type User struct {
	Username  string    `json:"username"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetUsername returns the value of Username.
func (s *User) GetUsername() string {
	return s.Username
}

// GetCreatedAt returns the value of CreatedAt.
func (s *User) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *User) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUsername sets the value of Username.
func (s *User) SetUsername(val string) {
	s.Username = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *User) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *User) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/UserResponse
type UserResponse struct {
	User User `json:"user"`
}

// GetUser returns the value of User.
func (s *UserResponse) GetUser() User {
	return s.User
}

// SetUser sets the value of User.
func (s *UserResponse) SetUser(val User) {
	s.User = val
}

func (*UserResponse) createUserRes()        {}
func (*UserResponse) getUserByUsernameRes() {}
